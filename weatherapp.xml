<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html>
<html b:version='2' class='v2'>
  <head>
    <meta content='width=device-width, initial-scale=1.0' name='viewport'/>
 <b:if cond='data:view.isMultipleItems'>
    <meta content='summary' name='twitter:card'/>
    <meta content='' name='twitter:site'/>
    <meta content='' name='twitter:creator'/>
    <meta expr:content='data:blog.title' name='twitter:title'/>
    <meta expr:content='data:blog.canonicalUrl' name='twitter:url'/>
    <meta expr:content='data:blog.metaDescription' name='twitter:description'/>
    <meta content='https://i.imgur.com/X4hSa0G.jpg' name='twitter:image'/>
    <meta content='' property='fb:app_id'/>
    <meta content='' property='fb:admins'/>
    <meta content='' property='og:site_name'/>
    <meta content='website' property='og:type'/>
    <meta expr:content='data:blog.canonicalUrl' property='og:url'/>
    <meta expr:content='data:blog.title' property='og:title'/>
    <meta expr:content='data:blog.metaDescription' property='og:description'/>
    <meta content='https://i.imgur.com/X4hSa0G.jpg' property='og:image'/>
    <meta expr:content='data:blog.title' property='og:image:alt'/>
    <meta content='website' property='og:type'/>
    <meta expr:content='data:blog.canonicalUrl' itemprop='og:url'/>
    <meta expr:content='data:blog.title' itemprop='og:headline'/>
    <meta expr:content='data:blog.metaDescription' itemprop='og:description'/>
    <meta content='https://i.imgur.com/X4hSa0G.jpg' property='og:image'/>
 </b:if>
 <!-- DNS prefetch --> 
<link href='//1.bp.blogspot.com' rel='dns-prefetch'/>
<link href='//2.bp.blogspot.com' rel='dns-prefetch'/>
<link href='//3.bp.blogspot.com' rel='dns-prefetch'/>
<link href='//4.bp.blogspot.com' rel='dns-prefetch'/>
<link href='//www.blogger.com' rel='dns-prefetch'/>
<link href='//maxcdn.bootstrapcdn.com' rel='dns-prefetch'/>
<link href='//fonts.googleapis.com' rel='dns-prefetch'/>
<link href='//use.fontawesome.com' rel='dns-prefetch'/>
<link href='//ajax.googleapis.com' rel='dns-prefetch'/>
<link href='//resources.blogblog.com' rel='dns-prefetch'/>
<link href='//www.facebook.com' rel='dns-prefetch'/>
<link href='//plus.google.com' rel='dns-prefetch'/>
<link href='//twitter.com' rel='dns-prefetch'/>
<link href='//www.youtube.com' rel='dns-prefetch'/>
<link href='//feedburner.google.com' rel='dns-prefetch'/>
<link href='//www.pinterest.com' rel='dns-prefetch'/>
<link href='//www.linkedin.com' rel='dns-prefetch'/>
<link href='//feeds.feedburner.com' rel='dns-prefetch'/>
<link href='//github.com' rel='dns-prefetch'/>
<link href='//player.vimeo.com' rel='dns-prefetch'/>
<link href='//platform.twitter.com' rel='dns-prefetch'/>
<link href='//apis.google.com' rel='dns-prefetch'/>
<link href='//connect.facebook.net' rel='dns-prefetch'/>
<link href='//cdnjs.cloudflare.com' rel='dns-prefetch'/>
<link href='//www.google-analytics.com' rel='dns-prefetch'/>
<link href='//pagead2.googlesyndication.com' rel='dns-prefetch'/>
<link href='//googleads.g.doubleclick.net' rel='dns-prefetch'/>
<link href='//www.gstatic.com' rel='preconnect'/>
<link href='//www.googletagservices.com' rel='dns-prefetch'/>
<link href='//static.xx.fbcdn.net' rel='dns-prefetch'/>
<link href='//tpc.googlesyndication.com' rel='dns-prefetch'/>
<link href='//syndication.twitter.com' rel='dns-prefetch'/>
    <title>
      <data:blog.title/>
    </title>
    <b:skin>
      <![CDATA[
@import "https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;500;600;700&display=swap";
*{margin:0;padding:0;box-sizing:border-box;font-family:'Open Sans',sans-serif}
body{background:#E3F2FD}
h1{background:#5372F0;font-size:1.75rem;text-align:center;padding:18px 0;color:#fff}
.container{display:flex;gap:35px;padding:30px}
.weather-input{width:550px}
.weather-input input{height:46px;width:100%;outline:none;font-size:1.07rem;padding:0 17px;margin:10px 0 20px;border-radius:4px;border:1px solid #ccc}
.weather-input input:focus{padding:0 16px;border:2px solid #5372F0}
.weather-input .separator{height:1px;width:100%;margin:25px 0;background:#BBB;display:flex;align-items:center;justify-content:center}
.weather-input .separator::before{content:"or";color:#6C757D;font-size:1.18rem;padding:0 15px;margin-top:-4px;background:#E3F2FD}
.weather-input button{width:100%;padding:10px 0;cursor:pointer;outline:none;border:none;border-radius:4px;font-size:1rem;color:#fff;background:#5372F0;transition:.2s ease}
.weather-input .search-btn:hover{background:#2c52ed}
.weather-input .location-btn{background:#6C757D}
.weather-input .location-btn:hover{background:#5c636a}
.weather-data{width:100%}
.weather-data .current-weather{color:#fff;background:#5372F0;border-radius:5px;padding:20px 70px 20px 20px;display:flex;justify-content:space-between}
.current-weather h2{font-weight:700;font-size:1.7rem}
.weather-data h6{margin-top:12px;font-size:1rem;font-weight:500}
.current-weather .icon{text-align:center}
.current-weather .icon img{max-width:120px;margin-top:-15px}
.current-weather .icon h6{margin-top:-10px;text-transform:capitalize}
.days-forecast h2{margin:20px 0;font-size:1.5rem}
.days-forecast .weather-cards{display:flex;gap:20px}
.weather-cards .card{color:#fff;padding:18px 16px;list-style:none;width:calc(100% / 5);background:#6C757D;border-radius:5px}
.weather-cards .card h3{font-size:1.3rem;font-weight:600}
.weather-cards .card img{max-width:70px;margin:5px 0 -12px}
@media (max-width: 1400px) {
.weather-data .current-weather{padding:20px}
.weather-cards{flex-wrap:wrap}
.weather-cards .card{width:calc(100% / 4 - 15px)}
}
@media (max-width: 1200px) {
.weather-cards .card{width:calc(100% / 3 - 15px)}
}
@media (max-width: 950px) {
.weather-input{width:450px}
.weather-cards .card{width:calc(100% / 2 - 10px)}
}
@media (max-width: 750px) {
h1{font-size:1.45rem;padding:16px 0}
.container{flex-wrap:wrap;padding:15px}
.weather-input{width:100%}
.weather-data h2{font-size:1.35rem}
}
]]>
    </b:skin>
  </head>

<body class="is-loading">

<b:if cond='data:view.isHomepage'>
<!-- Nội dung chính -->

<h1>Weather Dashboard</h1>
<div class="container">
  <div class="weather-input">
    <h3>Enter a City Name</h3>
    <input class="city-input" type="text" placeholder="E.g., New York, London, Tokyo"/>
    <button class="search-btn">Search</button>
    <div class="separator"></div>
    <button class="location-btn">Use Current Location</button>
  </div>
  <div class="weather-data">
    <div class="current-weather">
      <div class="details">
        <h2>_______ ( ______ )</h2>
        <h6>Temperature: __°C</h6>
        <h6>Wind: __ M/S</h6>
        <h6>Humidity: __%</h6>
      </div>
    </div>
    <div class="days-forecast">
      <h2>5-Day Forecast</h2>
      <ul class="weather-cards">
        <li class="card">
          <h3>( ______ )</h3>
          <h6>Temp: __C</h6>
          <h6>Wind: __ M/S</h6>
          <h6>Humidity: __%</h6>
        </li>
        <li class="card">
          <h3>( ______ )</h3>
          <h6>Temp: __C</h6>
          <h6>Wind: __ M/S</h6>
          <h6>Humidity: __%</h6>
        </li>
        <li class="card">
          <h3>( ______ )</h3>
          <h6>Temp: __C</h6>
          <h6>Wind: __ M/S</h6>
          <h6>Humidity: __%</h6>
        </li>
        <li class="card">
          <h3>( ______ )</h3>
          <h6>Temp: __C</h6>
          <h6>Wind: __ M/S</h6>
          <h6>Humidity: __%</h6>
        </li>
        <li class="card">
          <h3>( ______ )</h3>
          <h6>Temp: __C</h6>
          <h6>Wind: __ M/S</h6>
          <h6>Humidity: __%</h6>
        </li>
      </ul>
    </div>
  </div>
</div>


<script>//<![CDATA[
<!-- Chèn javascript (nếu có) -->

const cityInput = document.querySelector(".city-input");
const searchButton = document.querySelector(".search-btn");
const locationButton = document.querySelector(".location-btn");
const currentWeatherDiv = document.querySelector(".current-weather");
const weatherCardsDiv = document.querySelector(".weather-cards");

<!-- const API_KEY = "YOUR-API-KEY-HERE"; // API key for OpenWeatherMap API -->
const API_KEY = "9f2e1f455e003246d00a9c41b725bbc8"; // Hoặc để key mặc định của tác giả

const createWeatherCard = (cityName, weatherItem, index) => {
    if(index === 0) { // HTML for the main weather card
        return `<div class="details">
                    <h2>${cityName} (${weatherItem.dt_txt.split(" ")[0]})</h2>
                    <h6>Temperature: ${(weatherItem.main.temp - 273.15).toFixed(2)}°C</h6>
                    <h6>Wind: ${weatherItem.wind.speed} M/S</h6>
                    <h6>Humidity: ${weatherItem.main.humidity}%</h6>
                </div>
                <div class="icon">
                    <img src="https://openweathermap.org/img/wn/${weatherItem.weather[0].icon}@4x.png" alt="weather-icon">
                    <h6>${weatherItem.weather[0].description}</h6>
                </div>`;
    } else { // HTML for the other five day forecast card
        return `<li class="card">
                    <h3>(${weatherItem.dt_txt.split(" ")[0]})</h3>
                    <img src="https://openweathermap.org/img/wn/${weatherItem.weather[0].icon}@4x.png" alt="weather-icon">
                    <h6>Temp: ${(weatherItem.main.temp - 273.15).toFixed(2)}°C</h6>
                    <h6>Wind: ${weatherItem.wind.speed} M/S</h6>
                    <h6>Humidity: ${weatherItem.main.humidity}%</h6>
                </li>`;
    }
}

const getWeatherDetails = (cityName, latitude, longitude) => {
    const WEATHER_API_URL = `https://api.openweathermap.org/data/2.5/forecast?lat=${latitude}&lon=${longitude}&appid=${API_KEY}`;

    fetch(WEATHER_API_URL).then(response => response.json()).then(data => {
        // Filter the forecasts to get only one forecast per day
        const uniqueForecastDays = [];
        const fiveDaysForecast = data.list.filter(forecast => {
            const forecastDate = new Date(forecast.dt_txt).getDate();
            if (!uniqueForecastDays.includes(forecastDate)) {
                return uniqueForecastDays.push(forecastDate);
            }
        });

        // Clearing previous weather data
        cityInput.value = "";
        currentWeatherDiv.innerHTML = "";
        weatherCardsDiv.innerHTML = "";

        // Creating weather cards and adding them to the DOM
        fiveDaysForecast.forEach((weatherItem, index) => {
            const html = createWeatherCard(cityName, weatherItem, index);
            if (index === 0) {
                currentWeatherDiv.insertAdjacentHTML("beforeend", html);
            } else {
                weatherCardsDiv.insertAdjacentHTML("beforeend", html);
            }
        });        
    }).catch(() => {
        alert("An error occurred while fetching the weather forecast!");
    });
}

const getCityCoordinates = () => {
    const cityName = cityInput.value.trim();
    if (cityName === "") return;
    const API_URL = `https://api.openweathermap.org/geo/1.0/direct?q=${cityName}&limit=1&appid=${API_KEY}`;
    
    // Get entered city coordinates (latitude, longitude, and name) from the API response
    fetch(API_URL).then(response => response.json()).then(data => {
        if (!data.length) return alert(`No coordinates found for ${cityName}`);
        const { lat, lon, name } = data[0];
        getWeatherDetails(name, lat, lon);
    }).catch(() => {
        alert("An error occurred while fetching the coordinates!");
    });
}

const getUserCoordinates = () => {
    navigator.geolocation.getCurrentPosition(
        position => {
            const { latitude, longitude } = position.coords; // Get coordinates of user location
            // Get city name from coordinates using reverse geocoding API
            const API_URL = `https://api.openweathermap.org/geo/1.0/reverse?lat=${latitude}&lon=${longitude}&limit=1&appid=${API_KEY}`;
            fetch(API_URL).then(response => response.json()).then(data => {
                const { name } = data[0];
                getWeatherDetails(name, latitude, longitude);
            }).catch(() => {
                alert("An error occurred while fetching the city name!");
            });
        },
        error => { // Show alert if user denied the location permission
            if (error.code === error.PERMISSION_DENIED) {
                alert("Geolocation request denied. Please reset location permission to grant access again.");
            } else {
                alert("Geolocation request error. Please reset location permission.");
            }
        });
}

locationButton.addEventListener("click", getUserCoordinates);
searchButton.addEventListener("click", getCityCoordinates);
cityInput.addEventListener("keyup", e => e.key === "Enter" && getCityCoordinates());

//]]></script>
</b:if>


<!-- Không cần quan tâm lắm -->
<b:if cond='data:view.isError'>
<!-- áp dụng cho trang lỗi (404 page) -->
Nội dung 404
</b:if>
<!-- Chỗ này không cần sửa, nhưng không được xóa -->
<b:section class='main' id='mainpost' showaddelement='yes'></b:section>
<!-- Không cần quan tâm lắm -->

&lt;!--</body>--&gt;&lt;/body&gt;
</html>
